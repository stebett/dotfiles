# Start window numbering at 1
set -g mouse on
set -g base-index 1
set -s escape-time 0
# split panes using | and -
bind | split-window -h
bind - split-window -v
unbind '"'
unbind %

# Intelligently navigate tmux panes and Vim splits using the same keys.
# See https://sunaku.github.io/tmux-select-pane.html for documentation.
#
#      +-------------+------------+-----------------------------+
#      | inside Vim? | is Zoomed? | Action taken by key binding |
#      +-------------+------------+-----------------------------+
#      | No          | No         | Focus directional tmux pane |
#      | No          | Yes        | Nothing: ignore key binding |
#      | Yes         | No         | Seamlessly focus Vim / tmux |
#      | Yes         | Yes        | Focus directional Vim split |
#      +-------------+------------+-----------------------------+
#
vim_navigation_timeout=0.001 # number of seconds we give Vim to navigate
navigate='                                                             \
  pane_is_zoomed() {                                                   \
    test #{window_zoomed_flag} -eq 1;                                  \
  };                                                                   \
  pane_title_changed() {                                               \
    test "#{pane_title}" != "$(tmux display -p "##{pane_title}")";     \
  };                                                                   \
  command_is_vim() {                                                   \
    case "${1%% *}" in                                                 \
      (vi|?vi|vim*|?vim*|view|?view|vi??*) true ;;                     \
      (*) false ;;                                                     \
    esac;                                                              \
  };                                                                   \
  pane_contains_vim() {                                                \
    case "#{=3:pane_current_command}" in                               \
      (ssh|sh) command_is_vim "#{=5:pane_title}" ;;                    \
      (*) command_is_vim "#{=5:pane_current_command}" ;;               \
    esac;                                                              \
  };                                                                   \
  pane_contains_neovim_terminal() {                                    \
    test "#{=12:pane_title}" = "nvim term://";                         \
  };                                                                   \
  navigate() {                                                         \
    tmux_navigation_command=$1;                                        \
    vim_navigation_command=$2;                                         \
    vim_navigation_only_if=${3:-true};                                 \
    if pane_contains_vim && eval "$vim_navigation_only_if"; then       \
      if pane_contains_neovim_terminal; then                           \
        tmux send-keys C-\\ C-n;                                       \
      fi;                                                              \
      eval "$vim_navigation_command";                                  \
      if ! pane_is_zoomed; then                                        \
        sleep $vim_navigation_timeout; : wait for Vim to change title; \
        if ! pane_title_changed; then                                  \
          eval "$tmux_navigation_command";                             \
        fi;                                                            \
      fi;                                                              \
    elif ! pane_is_zoomed; then                                        \
      eval "$tmux_navigation_command";                                 \
    fi;                                                                \
  };                                                                   \
navigate '
navigate_left=" $navigate 'tmux select-pane -L'  'tmux send-keys C-w h'"
navigate_down=" $navigate 'tmux select-pane -D'  'tmux send-keys C-w j'"
navigate_up="   $navigate 'tmux select-pane -U'  'tmux send-keys C-w k'"
navigate_right="$navigate 'tmux select-pane -R'  'tmux send-keys C-w l'"
navigate_back=" $navigate 'tmux select-pane -l || tmux select-pane -t1'\
                          'tmux send-keys C-w p'                       \
                          'pane_is_zoomed'                             "

# QWERTY keys - comment these out if you don't use QWERTY layout!
bind-key -n M-h run-shell -b "$navigate_left"
bind-key -n M-j run-shell -b "$navigate_down"
bind-key -n M-k run-shell -b "$navigate_up"
bind-key -n M-l run-shell -b "$navigate_right"

set -g pane-active-border-style "bg=default, fg=colour4"

set -g message-style "fg=colour0, bg=colour4"

set -g status-justify left
# set -g status-bg "colour236"
set -g status-bg "default"
set -g status-fg white

setw -g clock-mode-colour "colour4"

setw -g status-left "#[bold] #S "
setw -g status-left-style "fg=black, bg=colour4"
# setw -g status-left-style "bg=black, fg=colour7"

set -g status-right-length "100"
set -g status-right "#[fg=black,bg=colour4]#[bold] #h "


# set -g status-right-length "100"
# set -g status-right "#[fg=colour7,bg=colour236]#[bold] #h "

setw -g window-status-format " #W "
setw -g window-status-separator ""
setw -g window-status-style "fg=colour0, bg=colour7"

setw -g window-status-current-format " #W "
setw -g window-status-current-style "bg=colour239 fg=colour15"

set -g default-terminal "screen-256color"
